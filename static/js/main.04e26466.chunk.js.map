{"version":3,"sources":["img/TMDBlogo.svg","components/MovieList.jsx","components/Navigation.jsx","components/Search.jsx","components/MoviePage.jsx","components/WatchList.jsx","App.js","index.js"],"names":["MovieList","useState","data","setData","genre","setGenre","useEffect","fetch","method","then","response","json","catch","e","console","warn","result","results","sort","a","b","release_date","className","map","item","i","to","pathname","hash","id","state","src","poster_path","alt","title","genre_ids","x","j","genreName","k","genres","length","name","moment","format","vote_average","Navigation","Search","setSearchedData","ready","setDelay","searched","handleSearch","page","setPage","log","setTimeout","type","placeholder","onClick","document","querySelector","value","icon","faSearch","disabled","total_pages","style","minHeight","MoviePage","props","movieData","credits","setCredits","guestID","setGuestID","location","slice","guest_session_id","cast","profile_path","tagline","backdrop_path","overview","localStorage","getItem","JSON","parse","push","setItem","stringify","addToWatchList","min","max","movieID","rating","alert","headers","body","status","statusText","addRating","person","WatchList","emptyList","setListStatus","dataLength","setLength","currentStorage","classes","split","splice","removeFromWatchList","target","App","path","component","logo","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"qLAAe,G,MAAA,IAA0B,sC,sCCK1B,SAASA,IAEpB,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KA+BA,OA5BAC,qBAAU,WACNC,MAAM,4FACN,CAAEC,OAAQ,QACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,wBAAyBF,MACjDJ,MAAK,SAAAO,GAAM,OAAIb,EAAQa,QAC7B,IAGHV,qBAAU,WACNC,MAAM,wGACN,CAAEC,OAAQ,QACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,uBAAwBF,MAChDJ,MAAK,SAAAO,GAAM,OAAIX,EAASW,QAC9B,IAGCd,GACAA,EAAKe,QAAQC,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAEE,aAAeD,EAAEC,cACX,EAED,KAMf,qBAAKC,UAAU,0CAAf,SACKpB,EACDA,EAAKe,QAAQM,KAAI,SAACC,EAAMC,GAAP,OACjB,qBAAaH,UAAU,kBAAvB,SAAyC,eAAC,IAAD,CAASI,GAAI,CAClDC,SAAS,aACTC,KAAK,GAAD,OAAK1B,EAAKe,QAAQQ,GAAGI,IACzBC,MAAO,CAACD,GAAI3B,EAAKe,QAAQQ,GAAGI,KAHS,UAKrC,qBAAKP,UAAU,eAAeS,IAAK,kCAAoCP,EAAKQ,YAAaC,IAAI,KAC7F,sBAAKX,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BE,EAAKU,QAC/B9B,EAEFoB,EAAKW,UAAUZ,KAAI,SAACa,EAAGC,GAEnB,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,EAAInC,EAAMoC,OAAOC,OAAQF,IACjCH,IAAMhC,EAAMoC,OAAOD,GAAGV,KACtBS,EAAYlC,EAAMoC,OAAOD,GAAGG,MAGpC,OAAO,sBAAcpB,UAAU,iCAAxB,SAA0DgB,GAA/CD,MAEtB,2CACA,sBAAKf,UAAU,gCAAf,UACI,+BAAOqB,IAAOnB,EAAKH,cAAcuB,OAAO,iBACxC,4CAAepB,EAAKqB,0BAtBtBpB,MA0BV,+CCnEG,SAASqB,IACpB,OAAO,iCACH,+BACI,6BAAI,cAAC,IAAD,CAASpB,GAAG,SAAZ,sBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,SAAZ,sBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,YAAZ,+B,oBCAD,SAASqB,IAEpB,MAAgC9C,oBAAS,GAAzC,mBAAOC,EAAP,KAAa8C,EAAb,KACA,EAA0B/C,oBAAS,GAAnC,mBAAOgD,EAAP,KAAcC,EAAd,KACA,EAAiCjD,oBAAS,GAA1C,mBAAOkD,EAAP,KAAiBC,EAAjB,KACA,EAA0BnD,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOoD,EAAP,KAAaC,EAAb,KAgCA,OA7BAhD,qBAAU,WACNC,MAAM,wGACN,CAAEC,OAAQ,QACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,uBAAwBF,MAChDJ,MAAK,SAAAO,GAAM,OAAIX,EAASW,QAC9B,IAGHV,qBAAU,WACFC,MAAM,iHAA0G8C,EAA1G,+BAA8IF,GAC/I1C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,wBAAyBF,MACjDJ,MAAK,SAAAO,GACFF,QAAQyC,IAAIvC,GACZgC,EAAgBhC,QAG7B,CAACmC,EAAUE,IAGd/C,qBAAU,WACNkD,YAAW,WACHL,GACAD,GAAS,KAEb,OACL,CAACC,IAEI,qCACJ,sBAAK7B,UAAU,aAAf,UACI,uBAAOmC,KAAK,OAAOC,YAAY,WAC/B,wBAAQC,QAAS,kBAAMP,EAAaQ,SAASC,cAAc,SAASC,QAApE,SAA4E,cAAC,IAAD,CAAiBC,KAAMC,WAErGf,EAAQ,sBAAK3B,UAAU,qEAAf,UACI,IAAT+B,EACD,wBAAQY,UAAQ,EAAhB,2BACA,wBAAQN,QAAS,kBAAML,EAAQD,EAAO,IAAtC,2BACCA,IAASnD,EAAKgE,YACf,wBAAQD,UAAQ,EAAhB,uBACA,wBAAQN,QAAS,kBAAML,EAAQD,EAAO,IAAtC,0BAEJ,6BACA,qBAAK/B,UAAU,0CAA0C6C,MAAO,CAACC,UAAW,QAA5E,SACKnB,EACD/C,EAAKe,QAAQM,KAAI,SAACC,EAAMC,GAAP,OACjB,qBAAaH,UAAU,kBAAvB,SAAyC,eAAC,IAAD,CAASI,GAAI,CAClDC,SAAS,aACTC,KAAK,GAAD,OAAK1B,EAAKe,QAAQQ,GAAGI,IACzBC,MAAO,CAACD,GAAI3B,EAAKe,QAAQQ,GAAGI,KAHS,UAKrC,qBAAKP,UAAU,eAAeS,IAAK,kCAAoCP,EAAKQ,YAAaC,IAAI,KAC7F,sBAAKX,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BE,EAAKU,QAC/B9B,EAEFoB,EAAKW,UAAUZ,KAAI,SAACa,EAAGC,GAEnB,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,EAAInC,EAAMoC,OAAOC,OAAQF,IACjCH,IAAMhC,EAAMoC,OAAOD,GAAGV,KACtBS,EAAYlC,EAAMoC,OAAOD,GAAGG,MAGpC,OAAO,sBAAcpB,UAAU,iCAAxB,SAA0DgB,GAA/CD,MAEtB,2CACA,sBAAKf,UAAU,gCAAf,UACI,+BAAOqB,IAAOnB,EAAKH,cAAcuB,OAAO,iBACxC,4CAAepB,EAAKqB,0BAtBtBpB,MA0BV,6B,YCrFG,SAAS4C,EAAUC,GAE9B,MAA6BrE,oBAAS,GAAtC,mBAAOsE,EAAP,KAAkBpE,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOuE,EAAP,KAAgBC,EAAhB,KACA,EAA8BxE,oBAAS,GAAvC,mBAAOyE,EAAP,KAAgBC,EAAhB,KA8EA,OA3EArE,qBAAU,WACNC,MAAM,sCAAD,OAAuC+D,EAAMM,SAAShD,KAAKiD,MAAM,GAAjE,6DACApE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,uBAAwBF,MAChDJ,MAAK,SAAAO,GAAM,OAAIb,EAAQa,QAC7B,CAACsD,EAAMM,SAAShD,OAGnBtB,qBAAU,WACNC,MAAM,sCAAD,OAAuC+D,EAAMM,SAAShD,KAAKiD,MAAM,GAAjE,qEACApE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,yBAA0BF,MAClDJ,MAAK,SAAAO,GAAM,OAAIyD,EAAWzD,QAChC,CAACsD,EAAMM,SAAShD,OAGnBtB,qBAAU,WACNC,MAAM,2GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,yBAA0BF,MAClDJ,MAAK,SAAAO,GAAM,OAAI2D,EAAW3D,QAChC,CAACsD,EAAMM,SAAShD,OAEnBd,QAAQyC,IAAI,UAAWmB,EAAQI,kBAG3BN,GACAA,EAAQO,KAAK7D,MAAK,SAACC,EAAGC,GAClB,OAAuB,OAAnBD,EAAE6D,cAA4C,SAAnB5D,EAAE4D,aACtB,EACc,SAAnB7D,EAAE6D,cAA8C,OAAnB5D,EAAE4D,cACzB,EAED,KA0CZ,qCACH,sBAAK1D,UAAU,iBAAf,UACI,6BAAKiD,EAAUrC,QACf,6BAAKqC,EAAUU,UACf,qBAAK3D,UAAU,QAAQS,IAAK,kCAAoCwC,EAAUW,cAAejD,IAAI,KAC7F,qBAAKX,UAAU,gCAAf,SACKiD,EACDA,EAAU/B,OAAOjB,KAAI,SAACa,EAAGC,GAAJ,OAAU,sBAAcf,UAAU,iCAAxB,SAA0Dc,EAAEM,MAAjDL,MAC1C,oDAEJ,sBAAKf,UAAU,gCAAf,UACI,kDAAqBqB,IAAO4B,EAAUlD,cAAcuB,OAAO,mBAC3D,4CAAe2B,EAAU1B,mBAE7B,4BAAI0B,EAAUY,WACd,wBAAQ7D,UAAU,kBAAkBqC,QAAS,kBApDrD,SAAwBY,GACpB,IAAIb,EAAc,GAElB,GAAyC,MAArC0B,aAAaC,QAAQ,aAAsB,CAC3C3B,EAAc4B,KAAKC,MAAMH,aAAaC,QAAQ,cADH,oBAGvB3B,GAHuB,IAG3C,2BACI,GAD6B,QACnBxB,QAAUqC,EAAUrC,MAC1B,OALmC,+BAS/CwB,EAAY8B,KAAKjB,GACjBa,aAAaK,QAAQ,YAAaH,KAAKI,UAAUhC,IAuCMiC,CAAepB,IAAlE,iCACA,sBAAKjD,UAAU,kBAAf,UACI,uBAAOmC,KAAK,SAASC,YAAY,SAASkC,IAAI,MAAMC,IAAI,OACxD,wBAAQvE,UAAU,gBAAgBqC,QAAS,kBAvCvD,SAAmBmC,EAASpB,EAASqB,GAC7BA,EAAS,IAAOA,EAAS,GACzBC,MAAM,qCAENzF,MAAM,sCAAD,OAAuCuF,EAAvC,mBAAyDC,EAAzD,qEAA4HrB,EAAQI,kBACrI,CACItE,OAAQ,OACRyF,QAAS,CAAE,eAAgB,kCAC3BC,KAAMZ,KAAKI,UAAU,CAAE,MAASK,MAEnCtF,MAAK,SAAAC,GAIF,OAHwB,MAApBA,EAASyF,QACTrF,QAAQC,KAAKL,EAAS0F,YAEnB1F,EAASC,UAEnBC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAK,yBAA0BF,MAClDJ,MAAK,SAAAO,GAAM,OAAIF,QAAQyC,IAAI,WAAYvC,MAsBSqF,CAAU9B,EAAU1C,GAAI6C,EAASd,SAASC,cAAc,SAASC,QAAlH,8BAGR,qBAAKxC,UAAU,0DAAf,SACKkD,EACDA,EAAQO,KAAKxD,KAAI,SAAC+E,EAAQ7E,GAAT,OACb,sBAAaH,UAAU,4CAAvB,UACI,qBAAKA,UAAU,eAAeS,IAAK,kCAAoCuE,EAAOtB,aAAc/C,IAAI,KAChG,qBAAKX,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BgF,EAAO5D,WAHjCjB,MAOd,qDChHG,SAAS8E,IAEpB,MAAwBtG,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAmCF,oBAAS,GAA5C,mBAAOuG,EAAP,KAAkBC,EAAlB,KACA,EAAgCxG,oBAAS,GAAzC,mBAAOyG,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBtB,KAAKC,MAAMH,aAAaC,QAAQ,cA2BvD,OAvBA/E,qBAAU,WAEF8E,aAAaC,QAAQ,eACrBlF,EAAQmF,KAAKC,MAAMH,aAAaC,QAAQ,eACxCoB,GAAc,MAEnB,IAEHnG,qBAAU,WACNH,EAAQyG,KACT,CAACF,IAcA,qBAAKpF,UAAU,0CAAf,SACKkF,EACD,0DACAtG,EACAA,EAAKqB,KAAI,SAACC,EAAMC,GAAP,OAAa,sBAAKH,UAAU,aAAf,UACtB,qBAAaA,UAAU,OAAvB,SAA8B,eAAC,IAAD,CAASI,GAAI,CACvCC,SAAS,aACTC,KAAK,GAAD,OAAK1B,EAAKuB,GAAGI,IACjBC,MAAO,CAACD,GAAI3B,EAAKuB,GAAGI,KAHM,UAK1B,qBAAKP,UAAU,eAAeS,IAAK,kCAAoCP,EAAKQ,YAAaC,IAAI,KAC7F,sBAAKX,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BE,EAAKU,QAC/BV,EAAKgB,OAAOjB,KAAI,SAACa,EAAGC,GAClB,OAAO,sBAAcf,UAAU,iCAAxB,SAA0Dc,EAAEM,MAAjDL,MAEtB,sBAAKf,UAAU,gCAAf,UACI,+BAAOqB,IAAOnB,EAAKH,cAAcuB,OAAO,iBACxC,4CAAepB,EAAKqB,0BAbtBpB,GAiBV,wBAAQH,UAAWG,EAAI,kBAAmBkC,QAAS,SAAC9C,GAAD,OAlC3D,SAA6BW,GACzB,IAAMqF,EAAUrF,EAAKF,UAAUwF,MAAM,KACrCF,EAAeG,OAAOF,EAAQ,GAAI,GAEJ,IAA1BD,EAAenE,QACfgE,GAAc,GAElBrB,aAAaK,QAAQ,YAAaH,KAAKI,UAAUkB,IACjDD,EAAUC,EAAenE,QA0BqCuE,CAAoBnG,EAAEoG,SAAhF,0CAEA,+CC7BGC,MAvBf,WACE,OACE,sBAAK5F,UAAU,MAAf,UACE,cAACwB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,KAAK,UAAUC,UAAWpH,IACjC,cAAC,IAAD,CAAOmH,KAAK,UAAUC,UAAWrE,IACjC,cAAC,IAAD,CAAOoE,KAAK,aAAaC,UAAW/C,IACpC,cAAC,IAAD,CAAO8C,KAAK,aAAaC,UAAWb,IACpC,cAAC,IAAD,CAAOY,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUzF,GAAG,iBAGjB,mCACE,gCACA,4CAAkB,qBAAKK,IAAKsF,EAAMpF,IAAI,YAExC,8BAAK,iDAAmB,mBAAGqF,KAAK,0BAA0BpF,MAAM,UAAxC,qBAAnB,SAAsF,mBAAGoF,KAAK,4BAA4BpF,MAAM,WAA1C,0CCtBjGqF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UAAY,cAAC,EAAD,QAEd7D,SAAS8D,eAAe,W","file":"static/js/main.04e26466.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/TMDBlogo.da3f379f.svg\";","import { useState, useEffect } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport default function MovieList() {\r\n\r\n    const [data, setData] = useState(false);\r\n    const [genre, setGenre] = useState(false);\r\n\r\n    // Get trending movies of latest week\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/trending/movie/week?api_key=8c20094b9d32bd14049b323d7d8294d0', \r\n        { method: 'GET' })\r\n            .then(response => response.json())\r\n            .catch(e => console.warn('error getting movies:', e))\r\n            .then(result => setData(result));\r\n    }, []);\r\n\r\n    // Get the Genre array to translate genre_ids \r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US', \r\n        { method: 'GET' })\r\n            .then(response => response.json())\r\n            .catch(e => console.warn('error getting genre:', e))\r\n            .then(result => setGenre(result));\r\n    }, []);\r\n    \r\n    // Sort by descending release date\r\n    if (data) {\r\n        data.results.sort((a, b) => {\r\n            if (a.release_date > b.release_date) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-center\">\r\n            {data ?\r\n            data.results.map((item, i) => \r\n            <div key={i} className=\"card m-2 m-lg-4\"><NavLink to={{\r\n                pathname:'/MoviePage',\r\n                hash: `${data.results[i].id}`,\r\n                state: {id: data.results[i].id}  \r\n              }}>\r\n                <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + item.poster_path} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{item.title}</h5>\r\n                    { genre ?\r\n                    // Translate genre ID to genre Name\r\n                    item.genre_ids.map((x, j) => {\r\n                        let genreName = '';\r\n                        for (let k = 0; k < genre.genres.length; k++) {\r\n                            if (x === genre.genres[k].id) {\r\n                                genreName = genre.genres[k].name;\r\n                            }\r\n                        }\r\n                        return <span key={j} className=\"badge bg-warning text-dark m-1\">{genreName}</span>\r\n                    }) :\r\n                    <p>Loading...</p>}\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <span>{moment(item.release_date).format(\"Do MMM YYYY\")}</span>\r\n                        <span>Rating: {item.vote_average}</span>\r\n                    </div>\r\n                </div>\r\n            </NavLink></div>):\r\n            <div>Loading...</div>}\r\n        </div>\r\n    )\r\n}","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Navigation() {\r\n    return <header>\r\n        <ul>\r\n            <li><NavLink to=\"Latest\">Latest</NavLink></li>\r\n            <li><NavLink to=\"Search\">Search</NavLink></li>\r\n            <li><NavLink to=\"watchList\">Watch List</NavLink></li>\r\n        </ul>\r\n    </header>\r\n}","import { useState, useEffect } from 'react';\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nexport default function Search() {\r\n\r\n    const [data, setSearchedData] = useState(false);\r\n    const [ready, setDelay] = useState(false);\r\n    const [searched, handleSearch] = useState(false);\r\n    const [genre, setGenre] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n\r\n    // Get the Genre array to translate genre_ids \r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US', \r\n        { method: 'GET' })\r\n            .then(response => response.json())\r\n            .catch(e => console.warn('error getting genre:', e))\r\n            .then(result => setGenre(result));\r\n    }, []);\r\n\r\n    // Get searched movies:\r\n    useEffect(() => {\r\n            fetch(`https://api.themoviedb.org/3/search/movie?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US&page=${page}&include_adult=false&query=` + searched)\r\n                .then(response => response.json())\r\n                .catch(e => console.warn('error getting movies:', e))\r\n                .then(result => {\r\n                    console.log(result);\r\n                    setSearchedData(result)\r\n                })\r\n            \r\n    }, [searched, page])\r\n\r\n    // Add a 200 second delay to update searched before displaying (else it would display 'false' as searched)\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (searched) {\r\n                setDelay(true)\r\n            }\r\n         }, 200);\r\n    }, [searched])\r\n\r\n    return (<>\r\n        <div className=\"searchWrap\">\r\n            <input type=\"text\" placeholder='Search' />\r\n            <button onClick={() => handleSearch(document.querySelector(\"input\").value)}><FontAwesomeIcon icon={faSearch} /></button>\r\n        </div>\r\n        { ready ? <div className=\"pages d-flex flex-row justify-content-between mx-md-5 my-2 my-md-0\">\r\n            {page === 1 ? \r\n            <button disabled>Previous Page</button> : \r\n            <button onClick={() => setPage(page - 1)}>Previous Page</button>}\r\n            {page === data.total_pages ? \r\n            <button disabled>Next Page</button> : \r\n            <button onClick={() => setPage(page + 1)}>Next Page</button>}\r\n         </div>:\r\n        <></> }\r\n        <div className=\"d-flex flex-wrap justify-content-center\" style={{minHeight: \"65vh\"}}>\r\n            {ready ?\r\n            data.results.map((item, i) => \r\n            <div key={i} className=\"card m-2 m-lg-4\"><NavLink to={{\r\n                pathname:'/MoviePage',\r\n                hash: `${data.results[i].id}`,\r\n                state: {id: data.results[i].id}  \r\n              }}>\r\n                <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + item.poster_path} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{item.title}</h5>\r\n                    { genre ?\r\n                    // Translate genre ID to genre Name\r\n                    item.genre_ids.map((x, j) => {\r\n                        let genreName = '';\r\n                        for (let k = 0; k < genre.genres.length; k++) {\r\n                            if (x === genre.genres[k].id) {\r\n                                genreName = genre.genres[k].name;\r\n                            }\r\n                        }\r\n                        return <span key={j} className=\"badge bg-warning text-dark m-1\">{genreName}</span>\r\n                    }) :\r\n                    <p>Loading...</p>}\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <span>{moment(item.release_date).format(\"Do MMM YYYY\")}</span>\r\n                        <span>Rating: {item.vote_average}</span>\r\n                    </div>\r\n                </div>\r\n            </NavLink></div>):\r\n            <div></div>}\r\n        </div>\r\n    </>)\r\n}","import { useState, useEffect } from 'react';\r\nimport moment from \"moment\";\r\n\r\nexport default function MoviePage(props) {\r\n\r\n    const [movieData, setData] = useState(false);\r\n    const [credits, setCredits] = useState(false);\r\n    const [guestID, setGuestID] = useState(false);\r\n\r\n    // Get movie information\r\n    useEffect(() => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${props.location.hash.slice(1)}?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US`)\r\n            .then(response => response.json())\r\n            .catch(e => console.warn('error getting movie:', e))\r\n            .then(result => setData(result));\r\n    }, [props.location.hash]);\r\n\r\n    // Get cast information\r\n    useEffect(() => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${props.location.hash.slice(1)}/credits?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US`)\r\n            .then(response => response.json())\r\n            .catch(e => console.warn('error getting credits:', e))\r\n            .then(result => setCredits(result));\r\n    }, [props.location.hash]);\r\n\r\n    // Get guestID information\r\n    useEffect(() => {\r\n        fetch(` https://api.themoviedb.org/3/authentication/guest_session/new?api_key=8c20094b9d32bd14049b323d7d8294d0`)\r\n            .then(response => response.json())\r\n            .catch(e => console.warn('error getting guestID:', e))\r\n            .then(result => setGuestID(result));\r\n    }, [props.location.hash]);\r\n        \r\n    console.log('guestID', guestID.guest_session_id);\r\n\r\n    // Sort by cast by photo availability\r\n    if (credits) {\r\n        credits.cast.sort((a, b) => {\r\n            if (a.profile_path === null && b.profile_path !== 'null') {\r\n                return 1;\r\n            } if (a.profile_path !== 'null' && b.profile_path === null) {\r\n                return -1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        })\r\n    }\r\n\r\n    function addToWatchList(movieData) {\r\n        let placeholder = [];\r\n        // Check if localStorage is empty\r\n        if (localStorage.getItem('watchList') != null) {\r\n            placeholder = JSON.parse(localStorage.getItem('watchList'));\r\n            // Check if movie is already in the watchList:\r\n            for (const movie of placeholder) {\r\n                if (movie.title === movieData.title) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        placeholder.push(movieData);\r\n        localStorage.setItem('watchList', JSON.stringify(placeholder));\r\n    }\r\n\r\n    function addRating(movieID, guestID, rating) {\r\n        if (rating < 0.5 || rating > 10) {\r\n            alert('Rating must be between 0.5 and 10')\r\n        } else {\r\n            fetch(`https://api.themoviedb.org/3/movie/${movieID}/rating?${rating}api_key=8c20094b9d32bd14049b323d7d8294d0&guest_session_id=${guestID.guest_session_id}`,\r\n                { \r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json;charset=utf-8', },\r\n                    body: JSON.stringify({ \"value\": rating })\r\n                })\r\n                .then(response => {\r\n                    if (response.status === 401) {\r\n                        console.warn(response.statusText)\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .catch(e => console.warn('error getting guestID:', e))\r\n                .then(result => console.log('Success:', result))\r\n        };\r\n    }\r\n\r\n    return <>\r\n        <div className=\"movieContainer\">\r\n            <h1>{movieData.title}</h1>\r\n            <h2>{movieData.tagline}</h2>\r\n            <img className=\"large\" src={\"http://image.tmdb.org/t/p/w780/\" + movieData.backdrop_path} alt=\"\"></img>\r\n            <div className=\"d-flex justify-content-around\">\r\n                {movieData ?\r\n                movieData.genres.map((x, j) => <span key={j} className=\"badge bg-warning text-dark m-1\">{x.name}</span>):\r\n                <p>Loading genres...</p>}\r\n            </div>\r\n            <div className=\"d-flex justify-content-around\">\r\n                <span>Release date: {moment(movieData.release_date).format(\"Do MMMM YYYY\")}</span>\r\n                <span>Rating: {movieData.vote_average}</span>\r\n            </div>\r\n            <p>{movieData.overview}</p>\r\n            <button className=\"btn btn-success\" onClick={() => addToWatchList(movieData)}>+ Add to watch list</button>\r\n            <div className=\"ratingContainer\">\r\n                <input type=\"number\" placeholder='Rating' min=\"0.5\" max=\"10\"/>\r\n                <button className=\"btn btn-light\" onClick={() => addRating(movieData.id, guestID, document.querySelector(\"input\").value)}>Rate Movie</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"peopleContainer d-flex flex-wrap justify-content-center\">\r\n            {credits ?\r\n            credits.cast.map((person, i) =>\r\n                <div key={i} className=\"person-card m-2 m-lg-4 d-flex flex-column\">\r\n                    <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + person.profile_path} alt=\"\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{person.name}</h5>\r\n                    </div>\r\n                </div>\r\n            ):\r\n            <p>Loading cast...</p>}\r\n        </div>\r\n    </>\r\n}","import { useState, useEffect } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nexport default function WatchList() {\r\n    \r\n    const [data, setData] = useState(false);\r\n    const [emptyList, setListStatus] = useState(true);\r\n    const [dataLength, setLength] = useState(false);\r\n\r\n    const currentStorage = JSON.parse(localStorage.getItem('watchList'));\r\n    \r\n\r\n    // Get movies from local storage\r\n    useEffect(() => {\r\n        // check if localStorage was used:\r\n        if (localStorage.getItem('watchList')) {\r\n            setData(JSON.parse(localStorage.getItem('watchList')));\r\n            setListStatus(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setData(currentStorage);\r\n    }, [dataLength]);\r\n\r\n    function removeFromWatchList(item) {\r\n        const classes = item.className.split(\" \")\r\n        currentStorage.splice(classes[0], 1);\r\n        // check if localStorage was cleared:\r\n        if (currentStorage.length === 0) {\r\n            setListStatus(true);\r\n        }\r\n        localStorage.setItem('watchList', JSON.stringify(currentStorage));\r\n        setLength(currentStorage.length);\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-center\">\r\n            {emptyList ?\r\n            <p>Your watch list is empty.</p> :\r\n            data ?\r\n            data.map((item, i) => <div className=\"m-2 m-lg-4\">\r\n            <div key={i} className=\"card\"><NavLink to={{\r\n                pathname:'/MoviePage',\r\n                hash: `${data[i].id}`,\r\n                state: {id: data[i].id}  \r\n              }}>\r\n                <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + item.poster_path} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{item.title}</h5>\r\n                    { item.genres.map((x, j) => {\r\n                        return <span key={j} className=\"badge bg-warning text-dark m-1\">{x.name}</span>\r\n                    })}\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <span>{moment(item.release_date).format(\"Do MMM YYYY\")}</span>\r\n                        <span>Rating: {item.vote_average}</span>\r\n                    </div>\r\n                </div>\r\n            </NavLink></div>\r\n            <button className={i + \" btn btn-danger\"} onClick={(e) => removeFromWatchList(e.target)}>Remove from watch list</button>\r\n            </div>):\r\n            <div>Loading...</div>}\r\n        </div>\r\n    )\r\n}","import './App.scss';\r\nimport logo from './img/TMDBlogo.svg';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport MovieList from './components/MovieList';\r\nimport Navigation from './components/Navigation';\r\nimport Search from './components/Search';\r\nimport MoviePage from './components/MoviePage';\r\nimport WatchList from './components/WatchList';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <Switch>\r\n        <Route path='/Latest' component={MovieList} />\r\n        <Route path='/Search' component={Search} />\r\n        <Route path='/MoviePage' component={MoviePage} />\r\n        <Route path='/watchList' component={WatchList} />\r\n        <Route path='*'>\r\n          <Redirect to=\"/Latest\" />\r\n        </Route>\r\n      </Switch>\r\n      <footer>\r\n        <div>\r\n        <p>Powered by:</p><img src={logo} alt=\"logo\"/>\r\n        </div>\r\n      <div><p>Favicon made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></p></div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter><App /></HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}