{"version":3,"sources":["img/TMDBlogo.svg","components/MovieList.jsx","components/Navigation.jsx","components/Search.jsx","components/MoviePage.jsx","App.js","index.js"],"names":["MovieList","useState","data","setData","genre","setGenre","useEffect","fetch","method","then","response","json","catch","e","console","warn","result","results","sort","a","b","release_date","className","map","item","i","to","pathname","hash","id","state","src","poster_path","alt","title","genre_ids","x","j","genreName","k","genres","length","name","moment","format","vote_average","Navigation","Search","setSearchedData","ready","setDelay","searched","handleSearch","setTimeout","type","placeholder","onClick","document","querySelector","value","icon","faSearch","style","minHeight","MoviePage","props","movieData","credits","setCredits","location","slice","cast","profile_path","tagline","backdrop_path","overview","person","App","path","component","logo","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6b2597f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/TMDBlogo.da3f379f.svg\";","import { useState, useEffect } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport moment from \"moment\";\n\n\nexport default function MovieList() {\n\n    const [data, setData] = useState(false);\n    const [genre, setGenre] = useState(false);\n\n    // Get trending movies of latest week\n    useEffect(() => {\n        fetch('https://api.themoviedb.org/3/trending/movie/week?api_key=8c20094b9d32bd14049b323d7d8294d0', \n        { method: 'GET' })\n            .then(response => response.json())\n            .catch(e => console.warn('error getting movies:', e))\n            .then(result => setData(result));\n    }, []);\n\n    // Get the Genre array to translate genre_ids \n    useEffect(() => {\n        fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US', \n        { method: 'GET' })\n            .then(response => response.json())\n            .catch(e => console.warn('error getting genre:', e))\n            .then(result => setGenre(result));\n    }, []);\n    \n    // Sort by descending release date\n    if (data) {\n        data.results.sort((a, b) => {\n            if (a.release_date > b.release_date) {\n                return -1;\n            } else {\n                return 1;\n            }\n        })\n    }\n\n    return (\n        <div className=\"d-flex flex-wrap justify-content-center\">\n            {data ?\n            data.results.map((item, i) => \n            <div key={i} className=\"card m-2 m-lg-4\"><NavLink to={{\n                pathname:'/MoviePage',\n                hash: `${data.results[i].id}`,\n                state: {id: data.results[i].id}  \n              }}>\n                <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + item.poster_path} alt=\"\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{item.title}</h5>\n                    { genre ?\n                    // Translate genre ID to genre Name\n                    item.genre_ids.map((x, j) => {\n                        let genreName = '';\n                        for (let k = 0; k < genre.genres.length; k++) {\n                            if (x === genre.genres[k].id) {\n                                genreName = genre.genres[k].name;\n                            }\n                        }\n                        return <span key={j} className=\"badge bg-warning text-dark m-1\">{genreName}</span>\n                    }) :\n                    <p>Loading...</p>}\n                    <div className=\"d-flex justify-content-around\">\n                        <span>{moment(item.release_date).format(\"Do MMM YYYY\")}</span>\n                        <span>Rating: {item.vote_average}</span>\n                    </div>\n                </div>\n            </NavLink></div>):\n            <div>Loading...</div>}\n        </div>\n    )\n}","import { NavLink } from \"react-router-dom\";\n\nexport default function Navigation() {\n    return <header>\n        <ul>\n            <li><NavLink to=\"Latest\">Latest</NavLink></li>\n            <li><NavLink to=\"Search\">Search</NavLink></li>\n            <li><NavLink to=\"Favorites\">Favorites</NavLink></li>\n        </ul>\n    </header>\n}","import { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport default function Search() {\n\n    const [data, setSearchedData] = useState(false);\n    const [ready, setDelay] = useState(false);\n    const [searched, handleSearch] = useState(false);\n    const [genre, setGenre] = useState(false);\n\n    // Get the Genre array to translate genre_ids \n    useEffect(() => {\n        fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US', \n        { method: 'GET' })\n            .then(response => response.json())\n            .catch(e => console.warn('error getting genre:', e))\n            .then(result => setGenre(result));\n    }, []);\n\n    // Get searched movies:\n    useEffect(() => {\n            fetch('https://api.themoviedb.org/3/search/movie?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US&page=1&include_adult=false&query=' + searched)\n                .then(response => response.json())\n                .catch(e => console.warn('error getting movies:', e))\n                .then(result => setSearchedData(result))\n    }, [searched])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (searched) {\n                setDelay(true)\n            }\n         }, 200);\n    }, [searched])\n\n    return (<>\n        <div className=\"searchWrap\">\n            <input type=\"text\" placeholder='Search' />\n            <button onClick={() => handleSearch(document.querySelector(\"input\").value)}><FontAwesomeIcon icon={faSearch} /></button>\n        </div>\n        <div className=\"d-flex flex-wrap justify-content-center\" style={{minHeight: \"65vh\"}}>\n            {ready ?\n            data.results.map((item, i) => \n            <div key={i} className=\"card m-2 m-lg-4\"><NavLink to={{\n                pathname:'/MoviePage',\n                hash: `${data.results[i].id}`,\n                state: {id: data.results[i].id}  \n              }}>\n                <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + item.poster_path} alt=\"\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{item.title}</h5>\n                    { genre ?\n                    // Translate genre ID to genre Name\n                    item.genre_ids.map((x, j) => {\n                        let genreName = '';\n                        for (let k = 0; k < genre.genres.length; k++) {\n                            if (x === genre.genres[k].id) {\n                                genreName = genre.genres[k].name;\n                            }\n                        }\n                        return <span key={j} className=\"badge bg-warning text-dark m-1\">{genreName}</span>\n                    }) :\n                    <p>Loading...</p>}\n                    <div className=\"d-flex justify-content-around\">\n                        <span>{moment(item.release_date).format(\"Do MMM YYYY\")}</span>\n                        <span>Rating: {item.vote_average}</span>\n                    </div>\n                </div>\n            </NavLink></div>):\n            <div></div>}\n        </div>\n    </>)\n}","import { useState, useEffect } from 'react';\nimport moment from \"moment\";\n\nexport default function MoviePage(props) {\n\n    const [movieData, setData] = useState(false);\n    const [credits, setCredits] = useState(false);\n\n    // Get movie information\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${props.location.hash.slice(1)}?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US`)\n            .then(response => response.json())\n            .catch(e => console.warn('error getting movie:', e))\n            .then(result => setData(result));\n    }, [props.location.hash]);\n\n    // Get cast information\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${props.location.hash.slice(1)}/credits?api_key=8c20094b9d32bd14049b323d7d8294d0&language=en-US`)\n            .then(response => response.json())\n            .catch(e => console.warn('error getting credits:', e))\n            .then(result => setCredits(result));\n    }, [props.location.hash]);\n\n    // Sort by cast by photo availability\n    if (credits) {\n        credits.cast.sort((a, b) => {\n            if (a.profile_path === null && b.profile_path !== 'null') {\n                return 1;\n            } if (a.profile_path !== 'null' && b.profile_path === null) {\n                return -1;\n            } else {\n                return 0;\n            }\n        })\n    }\n\n    return <>\n        <div className=\"movieContainer\">\n            <h1>{movieData.title}</h1>\n            <h2>{movieData.tagline}</h2>\n            <img className=\"large\" src={\"http://image.tmdb.org/t/p/w780/\" + movieData.backdrop_path} alt=\"\"></img>\n            <div className=\"d-flex justify-content-around\">\n                {movieData ?\n                movieData.genres.map((x, j) => <span key={j} className=\"badge bg-warning text-dark m-1\">{x.name}</span>):\n                <p>Loading genres...</p>}\n            </div>\n            <div className=\"d-flex justify-content-around\">\n                <span>Release date: {moment(movieData.release_date).format(\"Do MMMM YYYY\")}</span>\n                <span>Rating: {movieData.vote_average}</span>\n            </div>\n            <p>{movieData.overview}</p>\n        </div>\n        <div className=\"peopleContainer d-flex flex-wrap justify-content-center\">\n            {credits ?\n            credits.cast.map((person, i) =>\n                <div key={i} className=\"person-card m-2 m-lg-4 d-flex flex-column\">\n                    <img className=\"card-img-top\" src={\"http://image.tmdb.org/t/p/w300/\" + person.profile_path} alt=\"\" />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{person.name}</h5>\n                    </div>\n                </div>\n            ):\n            <p>Loading cast...</p>}\n        </div>\n    </>\n}","import './App.scss';\nimport logo from './img/TMDBlogo.svg';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport MovieList from './components/MovieList';\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport MoviePage from './components/MoviePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Switch>\n        <Route path='/Latest' component={MovieList} />\n        <Route path='/Search' component={Search} />\n        <Route path='/MoviePage' component={MoviePage} />\n        <Route path='*'>\n          <Redirect to=\"/Latest\" />\n        </Route>\n      </Switch>\n      <footer>\n        <div>\n        <p>Powered by:</p><img src={logo} alt=\"logo\"/>\n        </div>\n      <div><p>Favicon made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></p></div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter><App /></HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}